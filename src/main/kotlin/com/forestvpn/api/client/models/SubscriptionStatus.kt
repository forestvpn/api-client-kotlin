/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.forestvpn.api.client.models


import com.squareup.moshi.Json

/**
 * 
 *
 * Values: unknown,incomplete,incompleteExpired,trialing,active,pastDue,canceled,unpaid
 */

enum class SubscriptionStatus(val value: kotlin.String) {

    @Json(name = "unknown")
    unknown("unknown"),

    @Json(name = "incomplete")
    incomplete("incomplete"),

    @Json(name = "incomplete_expired")
    incompleteExpired("incomplete_expired"),

    @Json(name = "trialing")
    trialing("trialing"),

    @Json(name = "active")
    active("active"),

    @Json(name = "past_due")
    pastDue("past_due"),

    @Json(name = "canceled")
    canceled("canceled"),

    @Json(name = "unpaid")
    unpaid("unpaid");

    /**
     * Override toString() to avoid using the enum variable name as the value, and instead use
     * the actual value defined in the API spec file.
     *
     * This solves a problem when the variable name and its value are different, and ensures that
     * the client sends the correct enum values to the server always.
     */
    override fun toString(): String = value

    companion object {
        /**
         * Converts the provided [data] to a [String] on success, null otherwise.
         */
        fun encode(data: kotlin.Any?): kotlin.String? = if (data is SubscriptionStatus) "$data" else null

        /**
         * Returns a valid [SubscriptionStatus] for [data], null otherwise.
         */
        fun decode(data: kotlin.Any?): SubscriptionStatus? = data?.let {
          val normalizedData = "$it".lowercase()
          values().firstOrNull { value ->
            it == value || normalizedData == "$value".lowercase()
          }
        }
    }
}

