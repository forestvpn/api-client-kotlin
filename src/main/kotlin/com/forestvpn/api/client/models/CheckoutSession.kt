/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.forestvpn.api.client.models

import com.forestvpn.api.client.models.CheckoutSessionProduct

import com.squareup.moshi.Json

/**
 * 
 *
 * @param id 
 * @param cancelUrl 
 * @param successUrl 
 * @param currency 
 * @param amountSubtotal 
 * @param amountTotal 
 * @param products 
 * @param paymentStatus 
 * @param status 
 * @param createdAt 
 * @param expiresAt 
 * @param redirectUrl 
 * @param locale 
 * @param email 
 * @param trialPeriod Trial period duration in ISO 8601 format.
 * @param user 
 */


data class CheckoutSession (

    @Json(name = "id")
    val id: java.util.UUID,

    @Json(name = "cancel_url")
    val cancelUrl: kotlin.String,

    @Json(name = "success_url")
    val successUrl: kotlin.String,

    @Json(name = "currency")
    val currency: kotlin.String,

    @Json(name = "amount_subtotal")
    val amountSubtotal: kotlin.Double,

    @Json(name = "amount_total")
    val amountTotal: kotlin.Double,

    @Json(name = "products")
    val products: kotlin.collections.List<CheckoutSessionProduct>,

    @Json(name = "payment_status")
    val paymentStatus: CheckoutSession.PaymentStatus,

    @Json(name = "status")
    val status: CheckoutSession.Status,

    @Json(name = "created_at")
    val createdAt: java.time.OffsetDateTime,

    @Json(name = "expires_at")
    val expiresAt: java.time.OffsetDateTime,

    @Json(name = "redirect_url")
    val redirectUrl: kotlin.String? = null,

    @Json(name = "locale")
    val locale: kotlin.String? = null,

    @Json(name = "email")
    val email: kotlin.String? = null,

    /* Trial period duration in ISO 8601 format. */
    @Json(name = "trial_period")
    val trialPeriod: kotlin.String? = null,

    @Json(name = "user")
    val user: java.util.UUID? = null

) {

    /**
     * 
     *
     * Values: paid,unpaid,noPaymentRequired
     */
    enum class PaymentStatus(val value: kotlin.String) {
        @Json(name = "paid") paid("paid"),
        @Json(name = "unpaid") unpaid("unpaid"),
        @Json(name = "no_payment_required") noPaymentRequired("no_payment_required");
    }
    /**
     * 
     *
     * Values: `open`,complete,expired
     */
    enum class Status(val value: kotlin.String) {
        @Json(name = "open") `open`("open"),
        @Json(name = "complete") complete("complete"),
        @Json(name = "expired") expired("expired");
    }
}

